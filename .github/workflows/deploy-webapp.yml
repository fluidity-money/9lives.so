name: Deploy webapp

on:
  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: mainnet
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NEXT_PUBLIC_THIRDWEB_ID: ${{ vars.NEXT_PUBLIC_THIRDWEB_ID }}
      NEXT_PUBLIC_GRAPHQL_URL: "https://testnet-graph.9lives.so"
      NEXT_PUBLIC_FEATURES_URL: "https://features.9lives.so/features.json"
      NEXT_PUBLIC_POINTS_URL: "https://points-graph.superposition.so"
      NEXT_PUBLIC_FUSDC_ADDR: "0xa8ea92c819463efbeddfb670fefc881a480f0115"
      NEXT_PUBLIC_FACTORY_ADDR: "0x2e56a38de9c07df064704a14b479435f67b2a625"
      NEXT_PUBLIC_AMM_ADDR: "0x2A4a912970b780C29cf5b97aaD45ea5f98A07341"
      NEXT_PUBLIC_LENS_ADDR: "0x6B8ceA22DA83B4de5CF14B324ebf0F065015a84B"
      NEXT_PUBLIC_INFRA_ORACLE_ADDR: "0xecd4baeb99501114d9426c21aed9982ee4c96042"
      NEXT_PUBLIC_HELPER_ADDR: "0x51daCe91D85d59bD4AE867Eb403B4D5f55D65B4e"
      NEXT_PUBLIC_POSTHOG_KEY: "phc_wFN8nVjgKYNURCUsE7MEFUdAjgKE6aDC01AAEXLUGyt"
      NEXT_PUBLIC_POSTHOG_HOST: "https://us.i.posthog.com"
      NEXT_PUBLIC_WS_URL: "wss://superposition-test.hasura.app/v1/graphql"
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: "true"

      - uses: actions/setup-node@v3
        with:
           node-version: 20
 
      - uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: |
            - recursive: true

      - uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.json') }}-

      - name: Install Vercel CLI
        run: pnpm add --global vercel@latest

      - name: Build with Vercel
        run: vercel build --yes --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

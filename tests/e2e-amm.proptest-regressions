# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc a6ba36dfdd98ccd7a2b6985e4a16edc778556d1fcc355ef6dad56557f6e629ce # shrinks to outcome_a = 0x000000000000f2a9, outcome_b = 0x000000000000f9f5, mut c = StorageTrading { created: StorageBool { slot: 843964405992331597323988, offset: 31, cached: OnceCell(true) }, factory addr: StorageAddress { slot: 843964405992331597323988, offset: 11, cached: OnceCell(0x000000000000000000000000001b800585965ed3) }, when decided: StorageUint { slot: 843964405992331597323988, offset: 3, cached: OnceCell(<uninit>) }, is shutdown: StorageBool { slot: 843964405992331597323988, offset: 2, cached: OnceCell(true) }, fee recipient: StorageAddress { slot: 843964405992331597323989, offset: 12, cached: OnceCell(0x1d4ca931c46717bd3639f40a8b603675d771001b) }, time start: StorageUint { slot: 843964405992331597323989, offset: 4, cached: OnceCell(16149454568764392635) }, time ending: StorageUint { slot: 843964405992331597323990, offset: 24, cached: OnceCell(7648912012109936902) }, oracle: StorageAddress { slot: 843964405992331597323990, offset: 4, cached: OnceCell(0x277a4c56fd97e85094ef5ab879c0bb3f1e993c17) }, share impl: StorageAddress { slot: 843964405992331597323991, offset: 12, cached: OnceCell(0x4f550c06b7013e9185c1e9dc4079954def935eef) }, global shares: StorageUint { slot: 843964405992331597323998, offset: 0, cached: OnceCell(415419) }, .., seed invested: StorageUint { slot: 843964405992331597324002, offset: 0, cached: OnceCell(1206333496424544684667961) }, global invested: StorageUint { slot: 843964405992331597324000, offset: 0, cached: OnceCell(980617) }, .., winner: StorageFixedBytes { slot: 843964405992331597323993, offset: 24, cached: OnceCell(<uninit>) }, should buffer time: StorageBool { slot: 843964405992331597323993, offset: 23, cached: OnceCell(true) } }

#!/usr/bin/env -S rc -e

# Automated script to make a market that assumes the following:

# 1. The user has enough starting liquidity for $2, and for however much
# they want to allocate as an argument here.

# 2. The user has provided some amounts to buy both sides with. These
# will be used for an initial purchase. The first outcome is assumed to be the
# "No" case, and the second the "Yes" case.

# 3. The user has provided a valid admin secret, as this script assumes
# a permissioned user using one of the private oracle types (ie, the
# PRICE_ORACLE oracle type).

# At each step, environment variables will be printed which can be set
# to restart from the point after which they were printed.

fee_creator=3
fee_lp=3
fee_minter=3
fee_referrer=3
backend_is_dppm=true

if(~ $SPN_OUTCOME_0_SEED '') SPN_OUTCOME_0_SEED=`{date +%s}
if(~ $SPN_OUTCOME_1_SEED '') SPN_OUTCOME_1_SEED=`{date +%s}

fn usage_args {
	echo `{basename $0} '([0-9]+),?..' >[1=2]
	exit 2
}

fn usage_envs {
	echo '<'$1'> unset' >[1=2]
	exit 2
}

if(test `{echo $* | wc -w} -lt 2) \
	usage_args

sum=`{{ for(n) echo $n } | awk '{ sum += $1 } END { print sum }' }

vars=(\
	SPN_SUPERPOSITION_URL \
	SPN_SUPERPOSITION_KEY \
	SPN_SENDER_ADDR \
	SPN_ADMIN_SECRET \
	SPN_FUSDC_ADDR \
	SPN_BASE_ASSET \
	SPN_QUOTE_ASSET \
	SPN_ORACLE_ADDR \
	SPN_BUY_HELPER \
	SPN_FACTORY_ADDR \
)

for(a in $vars) if(~ $$a '') usage_envs $a

if(~ $SPN_STARTED_BY '') SPN_STARTED_BY=`{date +%s}
if(~ $SPN_DEADLINE '') SPN_DEADLINE=`{echo $SPN_STARTED_BY' + 3600' | bc}

echo SPN_OUTCOME_0_SEED=$SPN_OUTCOME_0_SEED >[1=2]
echo SPN_OUTCOME_1_SEED=$SPN_OUTCOME_1_SEED >[1=2]
echo SPN_STARTED_BY=$SPN_STARTED_BY >[1=2]
echo SPN_DEADLINE=$SPN_DEADLINE >[1=2]

fn send {
	if(~ $SPN_DRYRUN '') {
		cast send \
			--json \
			--rpc-url $SPN_SUPERPOSITION_URL \
			--private-key $SPN_SUPERPOSITION_KEY \
			$*
	}
	if not {
		echo
	}
}

fn call {
	cast call \
		--rpc-url $SPN_SUPERPOSITION_URL \
		--private-key $SPN_SUPERPOSITION_KEY \
		$*
}

fn call_and_send {
	resp=`{call $*}
	if(~ $SPN_DRYRUN '') send $* >[1=2]
	echo $resp
}

fn take_outcome_id {
	shasum -a512 | cut -f1 | dd bs=1 count=16 status=none
}

outcome_0_desc=`{echo $SPN_BASE_ASSET will end up below '$'$SPN_END_QUOTE_PRICE before $SPN_DEADLINE}
outcome_1_desc=`{echo $SPN_BASE_ASSET will end up above '$'$SPN_END_QUOTE_PRICE before $SPN_DEADLINE}

outcome_0_id=`{go run scripts/outcome-id.go $"outcome_0_desc $SPN_OUTCOME_0_SEED}
outcome_1_id=`{go run scripts/outcome-id.go $"outcome_1_desc $SPN_OUTCOME_1_SEED}

outcome_args='[('$outcome_0_id','$*(1)','$"outcome_0_desc'),('$outcome_1_id','$*(1)','$"outcome_1_desc')]'

documentation=''

documentation_h=0x`{echo -n $documentation | shasum -a256 | cut -f1 -d' '}

allowance_factory=`{\
	call $SPN_FUSDC_ADDR 'allowance(address,address)(uint256)' \
		$SPN_SENDER_ADDR \
		$SPN_FACTORY_ADDR \
			| cut -f1 -d' '
}

if(test $allowance_factory -lt 2000000) {
	send \
		$SPN_FUSDC_ADDR \
		'approve(address,uint256)' \
		$SPN_FACTORY_ADDR \
		2000000
}

allowance_buy_helper=`{\
	call $SPN_FUSDC_ADDR 'allowance(address,address)(uint256)' \
		$SPN_SENDER_ADDR \
		$SPN_BUY_HELPER \
			| cut -f1 -d' '
}

if(test $allowance_buy_helper -lt $sum) {
	send \
		$SPN_FUSDC_ADDR \
		'approve(address,uint256)' \
		$SPN_BUY_HELPER \
		$sum
}

if(~ $SPN_TRADING_ADDR '') {
	SPN_TRADING_ADDR=`{
		call_and_send \
			$SPN_FACTORY_ADDR \
			'newTrading9A87E788((bytes8,uint256,string)[],address,uint64,uint64,bytes32,address,uint64,uint64,uint64,uint64,bool)(address)' \
			$outcome_args \
			$SPN_ORACLE_ADDR \
			$SPN_STARTED_BY \
			$SPN_DEADLINE \
			$documentation_h \
			$SPN_SENDER_ADDR \
			$fee_creator \
			$fee_lp \
			$fee_minter \
			$fee_referrer \
			true
	}
}

echo 'SPN_TRADING_ADDR='$SPN_TRADING_ADDR >[1=2]

is_fake='false'

if(! ~ $SPN_DRYRUN '') is_fake=true

curl https://graph.9lives.so \
	-H 'Content-Type: application/json' \
	-H 'Authorization: '$SPN_ADMIN_SECRET \
	-sd '{"query":"mutation { explainCampaign( type: PUT, name: \"'$"outcome_1_desc'\", description: \"\", seed: 100, outcomes: [ { name: \"'$"outcome_0_desc'\", seed: '$SPN_OUTCOME_0_SEED', picture: \"\" }, { name: \"'$"outcome_1_desc'\", seed: '$SPN_OUTCOME_1_SEED', picture: \"\" } ], ending: '$SPN_DEADLINE', creator: \"'$SPN_SENDER_ADDR'\", isFake: '$is_fake', starting: '$SPN_STARTED_BY', isDppm: true, priceMetadata: { baseAsset: \"'$SPN_BASE_ASSET'\", quoteAsset: \"'$SPN_QUOTE_ASSET'\", priceTargetForUp: \"'$SPN_END_QUOTE_PRICE'\" })}"}'
